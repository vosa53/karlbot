name: Build and test

on:
  push:
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: '29Z#O*P63g!5'
          ACCEPT_EULA: 'Y'
        ports:
          - 1433:1433
          
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14.x
    - name: Restore client dependencies
      run: |
        cd client
        npm install
    - name: Build client
      run: |
        cd client
        npm run build -- karel
        npm run build -- karel-evaluation
        npm run build -- application
        cd projects
        cd karel
        npm install
        npm run build
        cd ..
        cd karel-evaluation
        npm install
        npm run build
        cd ../..
    - name: Test client
      run: |
        cd client
        npm run test -- --browsers=ChromeHeadless
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore server dependencies
      run: |
        cd server
        dotnet restore
    - name: Build server
      run: |
        cd server
        dotnet build --no-restore
    - name: Test server
      run: |
        cd server
        dotnet test --no-build --verbosity normal -e ConnectionStrings__DefaultConnection="Server=localhost,1433;Database=KarlBotTest;User Id=sa;Password=29Z#O*P63g!5;TrustServerCertificate=True"
    
    - name: End-to-end tests
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        wait-on: 'http://localhost:4200', 'https://localhost:7105'
        start: |
          cd client
          npm start
          cd ../server/KarlBot
          dotnet run --launch-profile "https"
      env:
          CYPRESS_ConnectionStrings__DefaultConnection: 'Server=localhost,1433;Database=KarlBotTest;User Id=sa;Password=29Z#O*P63g!5;TrustServerCertificate=True'
          CYPRESS_IsEndToEndTest: 'true'
        
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14.x
    - name: Restore client dependencies
      run: |
        cd client
        npm install
    - name: Build client
      run: |
        cd client
        npm run build -- karel --configuration production
        npm run build -- karel-evaluation --configuration production
        npm run build -- application --configuration production
        cd projects
        cd karel
        npm install
        npm run build
        cd ..
        cd karel-evaluation
        npm install
        npm run build
        cd ../..
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore server dependencies
      run: |
        cd server
        dotnet restore
    - name: Build server
      run: |
        cd server
        dotnet publish KarlBot/KarlBot.csproj --configuration Release -o dist --os win
        
    - name: Move
      run: |
        mv client/dist/application server/dist/wwwroot
        mv client/projects/karel/dist/karel.js server/dist/karel.js
        mv client/projects/karel-evaluation/dist/karel-evaluation.js server/dist/karel-evaluation.js
    - name: Write secrets
      shell: bash
      env:
        SERVER_APP_SETTINGS: ${{ secrets.SERVER_APP_SETTINGS }}
        SERVER_FIREBASE_CREDENTIAL: ${{ secrets.SERVER_FIREBASE_CREDENTIAL }}
      run: |
        cd server/dist
        echo "$SERVER_APP_SETTINGS" > appsettings.json
        echo "$SERVER_FIREBASE_CREDENTIAL" > firebase.json
    - name: Upload to FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTING_FTP_SERVER }}
        username: ${{ secrets.HOSTING_FTP_USERNAME }}
        password: ${{ secrets.HOSTING_FTP_PASSWORD }}
        protocol: ftps
        local-dir: server/dist/
        server-dir: www/