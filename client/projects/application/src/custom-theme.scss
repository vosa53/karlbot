
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use 'sass:map';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$my-palette: (
    50: #e8eaf6,
    100: #c5cae9,
    200: #9fa8da,
    300: #7986cb,
    500: #b4e61d,
    600: #a9d312,
    700: #9bbd00,
    800: #8da500,
    900: #767e00,
    contrast: (50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: white,
        400: white,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white
    )
);

$my-typography: mat.define-typography-config();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$application-primary: mat.define-palette($my-palette);
$application-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$application-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$application-light-theme: mat.define-light-theme((
    color: (
        primary: $application-primary,
        accent: $application-accent,
        warn: $application-warn,
        aaa: $application-warn
    ),
    density: 0,
    typography: $my-typography
));

$application-dark-theme: mat.define-dark-theme((
    color: (
        primary: $application-primary,
        accent: $application-accent,
        warn: $application-warn,
    ),
    density: 0,
    typography: $my-typography
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.typography-hierarchy($my-typography);


@include mat.all-component-themes($application-light-theme);

.light-theme {
    $color-config: mat.get-color-config($application-light-theme);
    $primary-palette: map.get($color-config, 'primary');
    $accent-palette:  map.get($color-config, 'accent');
    $warn-palette:    map.get($color-config, 'warn');
    $background-palette:   map.get($color-config, 'background');

    --color-primary: #{mat.get-color-from-palette($primary-palette, 500)};
    --color-accent: #{mat.get-color-from-palette($accent-palette, 500)};
    --color-warn: #{mat.get-color-from-palette($warn-palette, 500)};
    --background-primary: #{mat.get-color-from-palette($background-palette, 'background')};
    --background-secondary: #{mat.get-color-from-palette($background-palette, 'app-bar')};
    --background-tertiary: #eaeaea;
    --background-designer: url("/assets/designer-background-light.png");
}

.dark-theme {
    @include mat.all-component-colors($application-dark-theme);

    $color-config: mat.get-color-config($application-dark-theme);
    $primary-palette: map.get($color-config, 'primary');
    $accent-palette:  map.get($color-config, 'accent');
    $warn-palette:    map.get($color-config, 'warn');
    $background-palette:   map.get($color-config, 'background');

    --color-primary: #{mat.get-color-from-palette($primary-palette, 500)};
    --color-accent: #{mat.get-color-from-palette($accent-palette, 500)};
    --color-warn: #{mat.get-color-from-palette($warn-palette, 500)};
    --background-primary: #{mat.get-color-from-palette($background-palette, 'background')};
    --background-secondary: #{mat.get-color-from-palette($background-palette, 'app-bar')};
    --background-tertiary: #333333;
    --background-designer: url("/assets/designer-background-dark.png");
}
